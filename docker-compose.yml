# docker-compose.yml

version: "3.9"

services:
  web:
    build: .
    command: gunicorn core.wsgi -b 0.0.0.0:8000
    environment:
      - DJANGO_DEBUG=True
      - DJANGO_SECURE_SSL_REDIRECT=False
      - DJANGO_SECURE_HSTS_SECONDS=0
      - DJANGO_SECURE_HSTS_INCLUDE_SUBDOMAINS=False
      - DJANGO_SECURE_HSTS_PRELOAD=False
      - DJANGO_SESSION_COOKIE_SECURE=False
      - DJANGO_CSRF_COOKIE_SECURE=False
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=db
    volumes:
      - .:/code
    ports:
      - 8000:8000
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
  db:
    image: postgres:14
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
  redis:
    image: redis:6
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
  celery:
    build: .
    command: celery -A core worker --loglevel=info
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=db
      - CELERY_BROKER_URL=redis://redis:6379/0
    volumes:
      - .:/code
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

volumes:
  postgres_data:
